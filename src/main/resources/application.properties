server.port=8080
#druid相关配置
#监控统计拦截的filters
#	属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#   监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
spring.datasource.druid.filters=stat;
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
#基本属性
spring.datasource.druid.url=jdbc:mysql://localhost:3306/springdb?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.druid.username=root
spring.datasource.druid.password=Na19930420
#配置初始化大小/最小/最大
#   初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，默认是0
spring.datasource.druid.initial-size=1 
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
spring.datasource.druid.max-wait=60000
#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.time-between-eviction-runs-millis=60000
#一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validation-query=SELECT 'x'
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认为true
spring.datasource.druid.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认为false
spring.datasource.druid.test-on-return=false
#打开PSCache，并指定每个连接上PSCache的大小，oracle设为true，mysql设为false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.springboottest.model

pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params= count=countSql
pagehelper.returnPageInfo=check



